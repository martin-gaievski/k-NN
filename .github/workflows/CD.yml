name: Build and Release k-NN
on:
  push:
    tags:
      - v*

jobs:
  plugin-build-and-ship-artifacts:
    strategy:
      matrix:
        java: [14]

    name: Build and release plugin artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout k-NN
        uses: actions/checkout@v2

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Build
        run: |
          ./gradlew buildPackages --console=plain -Dbuild.snapshot=false

      - name: Upload to S3
        shell: bash
        run: |
          zip=`ls build/distributions/*.zip`
          rpm=`ls build/distributions/*.rpm`
          deb=`ls build/distributions/*.deb`

          # Inject the build number before the suffix
          zip_outfile=`basename ${zip%.zip}-build-${GITHUB_RUN_NUMBER}.zip`
          rpm_outfile=`basename ${rpm%.rpm}-build-${GITHUB_RUN_NUMBER}.rpm`
          deb_outfile=`basename ${deb%.deb}-build-${GITHUB_RUN_NUMBER}.deb`

          s3_prefix="s3://staging.artifacts.opendistroforelasticsearch.amazon.com/snapshot/elasticsearch-plugins/knn/"

          echo "Copying ${zip} to ${s3_prefix}${zip_outfile}"
          aws s3 cp --quiet $zip ${s3_prefix}${zip_outfile}

          echo "Copying ${rpm} to ${s3_prefix}${rpm_outfile}"
          aws s3 cp --quiet $rpm ${s3_prefix}${rpm_outfile}

          echo "Copying ${deb} to ${s3_prefix}${deb_outfile}"
          aws s3 cp --quiet $deb ${s3_prefix}${deb_outfile}

  library-build-and-ship-artifacts:
    name: Build and release JNI library artifacts
    runs-on: ubuntu-latest
    container:
      image: centos:7
    strategy:
      matrix:
        java: [14]
        compiler: [g++]
    steps:
      - name: Checkout k-NN
        uses: actions/checkout@v1
        with:
          submodules: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Java ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}

      - name: Install dependencies
        run: |
          yum update -y
          yum install -y cmake rpm-build gcc-c++ make epel-release unzip
          yum repolist
          yum install -y dpkg
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          ./aws/install
          aws --version

      - name: Build
        env:
          CXX: ${{ matrix.compiler }}
        run: |
          cd jni
          sed -i 's/-march=native/-march=x86-64/g' external/nmslib/similarity_search/CMakeLists.txt
          cmake .
          make package

          cd packages
          folder_name=`ls ./*.rpm | sed 's|\(.*\)\..*|\1|'`
          zip_name=$folder_name".zip"
          mkdir $folder_name
          cp ../release/*.so $folder_name
          zip -r $zip_name $folder_name/*

      - name: Upload to S3
        shell: bash
        run: |
          zip=`ls jni/packages/*.zip`
          rpm=`ls jni/packages/*.rpm`
          deb=`ls jni/packages/*.deb`

          # Inject the build number before the suffix
          zip_outfile=`basename ${zip%.zip}-build-${GITHUB_RUN_NUMBER}.zip`
          rpm_outfile=`basename ${rpm%.rpm}-build-${GITHUB_RUN_NUMBER}.rpm`
          deb_outfile=`basename ${deb%.deb}-build-${GITHUB_RUN_NUMBER}.deb`

          s3_prefix="s3://staging.artifacts.opendistroforelasticsearch.amazon.com/snapshot/elasticsearch-plugins/knn/"

          echo "Copying ${zip} to ${s3_prefix}${zip_outfile}"
          aws s3 cp --quiet $zip ${s3_prefix}${zip_outfile}

          echo "Copying ${rpm} to ${s3_prefix}${rpm_outfile}"
          aws s3 cp --quiet $rpm ${s3_prefix}${rpm_outfile}

          echo "Copying ${deb} to ${s3_prefix}${deb_outfile}"
          aws s3 cp --quiet $deb ${s3_prefix}${deb_outfile}
